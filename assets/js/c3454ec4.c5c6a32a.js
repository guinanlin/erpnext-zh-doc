"use strict";(self.webpackChunkstsinc_docs=self.webpackChunkstsinc_docs||[]).push([[4941],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>b});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),i=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=i(e.components);return r.createElement(a.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,p=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=i(t),f=o,b=u["".concat(a,".").concat(f)]||u[f]||d[f]||p;return t?r.createElement(b,c(c({ref:n},l),{},{components:t})):r.createElement(b,c({ref:n},l))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var p=t.length,c=new Array(p);c[0]=f;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[u]="string"==typeof e?e:o,c[1]=s;for(var i=2;i<p;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4294:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>p,metadata:()=>s,toc:()=>i});var r=t(7462),o=(t(7294),t(3905));const p={},c="\u81ea\u5df1\u505a\u4e2abench stop",s={unversionedId:"\u8fd0\u7ef4\u96c6\u6210/\u81ea\u5df1\u505a\u4e2abench stop",id:"\u8fd0\u7ef4\u96c6\u6210/\u81ea\u5df1\u505a\u4e2abench stop",title:"\u81ea\u5df1\u505a\u4e2abench stop",description:"\u9700\u6c42\u80cc\u666f\uff1a",source:"@site/best-practice/30. \u8fd0\u7ef4\u96c6\u6210/80. \u81ea\u5df1\u505a\u4e2abench stop.md",sourceDirName:"30. \u8fd0\u7ef4\u96c6\u6210",slug:"/\u8fd0\u7ef4\u96c6\u6210/\u81ea\u5df1\u505a\u4e2abench stop",permalink:"/best-practice/\u8fd0\u7ef4\u96c6\u6210/\u81ea\u5df1\u505a\u4e2abench stop",draft:!1,tags:[],version:"current",sidebarPosition:80,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5e38\u7528Bench\u547d\u4ee4",permalink:"/best-practice/\u8fd0\u7ef4\u96c6\u6210/\u5e38\u7528bench\u547d\u4ee4"},next:{title:"\u7ad9\u70b9\u52a0\u8f7dSSL\u8bc1\u4e66",permalink:"/best-practice/\u8fd0\u7ef4\u96c6\u6210/\u7ad9\u70b9\u52a0\u8f7dSSL\u8bc1\u4e66"}},a={},i=[{value:"\u9700\u6c42\u80cc\u666f\uff1a",id:"\u9700\u6c42\u80cc\u666f",level:4},{value:"\u66f4\u65b0\uff1a",id:"\u66f4\u65b0",level:3},{value:"\u505a\u6cd5\uff1a",id:"\u505a\u6cd5",level:4}],l={toc:i},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u81ea\u5df1\u505a\u4e2abench-stop"},"\u81ea\u5df1\u505a\u4e2abench stop"),(0,o.kt)("h4",{id:"\u9700\u6c42\u80cc\u666f"},"\u9700\u6c42\u80cc\u666f\uff1a"),(0,o.kt)("p",null,"\u6709\u4e9b\u573a\u666f\u4e0b\uff0c \u6211\u4eec\u957f\u671f\u8fd0\u884cbench start \uff0c\u4f46\u662f\u5173\u673a\u540e\u5374\u6ca1\u6709kill\u6389 bench start\u7684\u8fdb\u7a0b\u3002 "),(0,o.kt)("p",null,"\u8fd9\u6837\u5b50\u5bfc\u81f4bench start\u7684\u8fdb\u7a0b\u5c31\u5728\u540e\u53f0hang\u4f4f\u8fd0\u884c\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u7ecf\u5e38\u53ea\u80fd\u91cd\u542f\u4e00\u4e0b\u673a\u5668\u3002 \u4f46\u662f\u91cd\u542f\u673a\u5668\u592a\u9ebb\u70e6\u4e86\u3002 "),(0,o.kt)("p",null,"\u6240\u4ee5\u7528gpt\u5199\u4e86\u4e2a\u811a\u672c\uff0c \u4fdd\u7559 22\uff0c3306\uff0c80 \u7aef\u53e3\u3002 \u5176\u4ed6\u7684\u7aef\u53e3\u8fdb\u7a0b\u5168\u90e8kill\u3002"),(0,o.kt)("h3",{id:"\u66f4\u65b0"},"\u66f4\u65b0\uff1a"),(0,o.kt)("p",null,"2024-05-17 \u66f4\u65b0"),(0,o.kt)("p",null,"\u540e\u6765\u53d1\u73b0\u6ca1\u6cd5\u518d\u6b21\u6267\u884cbench start\u7684\u539f\u56e0\u662f\u7cfb\u7edf\u91cc\u5934\u7684 redis\uff0c python \u8fdb\u7a0b\u4f9d\u7136\u5728\u8fd0\u884c\u5bfc\u81f4\u7684\u3002 \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u547d\u4ee4\u5173\u95ed\u4e00\u4e0b\u5373\u53ef\u3002 "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe@899c031ceb4f:~/frappe-bench$ sudo pkill python redis\nfrappe@899c031ceb4f:~/frappe-bench$ netstat -lantp   \n(Not all processes could be identified, non-owned process info\n will not be shown, you would have to be root to see it all.)\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 127.0.0.11:37866        0.0.0.0:*               LISTEN      -                   \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   \ntcp        0    464 192.168.32.2:22         192.168.8.135:50694     ESTABLISHED -                   \ntcp6       0      0 :::22                   :::*                    LISTEN      - \n")),(0,o.kt)("h4",{id:"\u505a\u6cd5"},"\u505a\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'#!/bin/bash\n\n# \u786e\u4fdd\u8981\u4fdd\u7559\u7684\u7aef\u53e3\nkeep_ports=(22 80 3306)\n\n# \u83b7\u53d6\u6240\u6709\u5df2\u76d1\u542c\u7684\u7aef\u53e3\nall_ports=$(netstat -lnt | awk \'NR>2 {split($4, a, ":"); print a[2]}\')\n\n# \u7ec8\u6b62\u4e0d\u9700\u8981\u7684\u7aef\u53e3\u5bf9\u5e94\u7684\u8fdb\u7a0b\nfor port in $all_ports; do\n    found=0\n    for keep_port in ${keep_ports[@]}; do\n        if [ "$port" -eq "$keep_port" ]; then\n            found=1\n            break\n        fi\n    done\n    if [ $found -eq 0 ]; then\n        echo "Terminating processes on port $port"\n        fuser -k -n tcp $port\n    fi\ndone\n\necho "Processes terminated."\n')),(0,o.kt)("p",null,"\u6267\u884c\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe@e8811978c502:/home/test$ sudo bash ./kill.bench.start.sh \nTerminating processes on port 42630\n42630/tcp:             879\nTerminating processes on port 46025\n46025/tcp:             440\nTerminating processes on port 40145\nTerminating processes on port 4341\n4341/tcp:            56186 56187 56188 56189 56190 56191 56192 56193 56194\nTerminating processes on port 4342\nTerminating processes on port 4343\nTerminating processes on port 4344\nTerminating processes on port 8000\n8000/tcp:            108489\nTerminating processes on port 4321\nProcesses terminated.\n\n")))}d.isMDXComponent=!0}}]);