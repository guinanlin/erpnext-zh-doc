"use strict";(self.webpackChunkstsinc_docs=self.webpackChunkstsinc_docs||[]).push([[5670],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},i=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),s=l(a),u=o,h=s["".concat(c,".").concat(u)]||s[u]||m[u]||r;return a?n.createElement(h,d(d({ref:t},i),{},{components:a})):n.createElement(h,d({ref:t},i))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,d=new Array(r);d[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[s]="string"==typeof e?e:o,d[1]=p;for(var l=2;l<r;l++)d[l]=a[l];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5969:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var n=a(7462),o=(a(7294),a(3905));const r={},d="Document API",p={unversionedId:"Python\u670d\u52a1\u5668\u7aefAPI/Document API",id:"Python\u670d\u52a1\u5668\u7aefAPI/Document API",title:"Document API",description:"A Document is an instance of a DocType. It is derived from the frappe.model.Document class and represents a single record in the database table.",source:"@site/resource-center/50. Python\u670d\u52a1\u5668\u7aefAPI/10. Document API.md",sourceDirName:"50. Python\u670d\u52a1\u5668\u7aefAPI",slug:"/Python\u670d\u52a1\u5668\u7aefAPI/Document API",permalink:"/resource-center/Python\u670d\u52a1\u5668\u7aefAPI/Document API",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Form \u8868\u5355\u811a\u672c",permalink:"/resource-center/JS \u5ba2\u6237\u7aefAPI/From\u8868\u5355\u811a\u672c"},next:{title:"Frappe DataTable \u914d\u7f6e",permalink:"/resource-center/\u5176\u4ed6API/Frappe DataTabale API"}},c={},l=[{value:"frappe.get_doc ",id:"frappeget_doc-",level:2},{value:"frappe.get_last_doc ",id:"frappeget_last_doc-",level:2},{value:"frappe.get_cached_doc ",id:"frappeget_cached_doc-",level:2},{value:"frappe.new_doc ",id:"frappenew_doc-",level:2},{value:"frappe.delete_doc ",id:"frappedelete_doc-",level:2},{value:"frappe.rename_doc ",id:"frapperename_doc-",level:2},{value:"frappe.get_meta ",id:"frappeget_meta-",level:2},{value:"Document Methods ",id:"document-methods-",level:2},{value:"doc.insert ",id:"docinsert-",level:2},{value:"doc.save ",id:"docsave-",level:2},{value:"doc.delete ",id:"docdelete-",level:2},{value:"doc.get_doc_before_save ",id:"docget_doc_before_save-",level:2},{value:"doc.reload ",id:"docreload-",level:2},{value:"doc.check_permission ",id:"doccheck_permission-",level:2},{value:"doc.get_title ",id:"docget_title-",level:2},{value:"doc.notify_update ",id:"docnotify_update-",level:2},{value:"doc.db_set ",id:"docdb_set-",level:2},{value:"doc.append ",id:"docappend-",level:2},{value:"doc.get_url ",id:"docget_url-",level:2},{value:"doc.add_comment ",id:"docadd_comment-",level:2},{value:"doc.add_seen ",id:"docadd_seen-",level:2},{value:"doc.add_viewed ",id:"docadd_viewed-",level:2},{value:"doc.add_tag ",id:"docadd_tag-",level:2},{value:"doc.get_tags ",id:"docget_tags-",level:2},{value:"doc.run_method ",id:"docrun_method-",level:2},{value:"doc.queue_action ",id:"docqueue_action-",level:2},{value:"doc.get_children() ",id:"docget_children-",level:2},{value:"doc.get_parent() ",id:"docget_parent-",level:2},{value:"doc.db_insert() ",id:"docdb_insert-",level:2},{value:"doc.db_update() ",id:"docdb_update-",level:2}],i={toc:l},s="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(s,(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"document-api"},"Document API"),(0,o.kt)("p",null,"A Document is an instance of a DocType. It is derived from the ",(0,o.kt)("inlineCode",{parentName:"p"},"frappe.model.Document")," class and represents a single record in the database table."),(0,o.kt)("h2",{id:"frappeget_doc-"},"frappe.get_doc",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-get-doc"}," ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe.get_doc(doctype, name)\n")),(0,o.kt)("p",null,"Returns a Document object of the record identified by ",(0,o.kt)("inlineCode",{parentName:"p"},"doctype")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),". If no document is found, a ",(0,o.kt)("inlineCode",{parentName:"p"},"DoesNotExistError")," is raised. If ",(0,o.kt)("inlineCode",{parentName:"p"},"doctype")," is a Single DocType ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," is not required."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# get an existing document\ndoc = frappe.get_doc('Task', 'TASK00002')\ndoc.title = 'Test'\ndoc.save()\n\n# get a single doctype\ndoc = frappe.get_doc('System Settings')\ndoc.timezone # Asia/Kolkata\nfrappe.get_doc(dict)\n")),(0,o.kt)("p",null,"Returns a new Document object in memory which does not exist yet in the database."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# create a new document\ndoc = frappe.get_doc({\n    'doctype': 'Task',\n    'title': 'New Task'\n})\ndoc.insert()\nfrappe.get_doc(doctype={document_type}, key1 = value1, key2 = value2, ...)\n")),(0,o.kt)("p",null,"Returns a new Document object in memory which does not exist yet in the database."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# create new object with keyword arguments\nuser = frappe.get_doc(doctype='User', email_id='test@example.com')\nuser.insert()\n")),(0,o.kt)("h2",{id:"frappeget_last_doc-"},"frappe.get_last_doc",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-get-last-doc"}," ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe.get_last_doc(doctype, filters, order_by)\n")),(0,o.kt)("p",null,"Returns the last Document object created under the mentioned ",(0,o.kt)("inlineCode",{parentName:"p"},"doctype"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# get the last Task created\ntask = frappe.get_last_doc('Task')\n")),(0,o.kt)("p",null,"You can also specify filters to refine your results. For instance, you can retrieve the last canceled Task by adding a filter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# get the last available Cancelled Task\ntask = frappe.get_last_doc(\'Task\', filters={"status": "Cancelled"})\n')),(0,o.kt)("p",null,"By default, the ",(0,o.kt)("inlineCode",{parentName:"p"},"order_by")," argument is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"creation desc"),", but this value can be overridden to use other non-standard fields that can serve the same purpose. For instance, you have a field ",(0,o.kt)("inlineCode",{parentName:"p"},"timestamp")," under the ",(0,o.kt)("strong",{parentName:"p"},"Task")," DocType that tracks the time it was approved or marked valid instead of the time it was created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# get the last Task created based on a non-standard field\ntask = frappe.get_last_doc(\'Task\', filters={"Status": "Cancelled"}, order_by="timestamp desc")\n')),(0,o.kt)("p",null,'Alternatively, you can choose to go completely against all of this and as a part of a joke change it to "creation asc" to retrieve the first document instead.'),(0,o.kt)("h2",{id:"frappeget_cached_doc-"},"frappe.get_cached_doc",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-get-cached-doc"}," ")),(0,o.kt)("p",null,"Similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"frappe.get_doc")," but will look up the document in cache first before hitting the database."),(0,o.kt)("h2",{id:"frappenew_doc-"},"frappe.new_doc",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-new-doc"}," ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe.new_doc(doctype)\n")),(0,o.kt)("p",null,"Alternative way to create a new Document."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# create a new document\ndoc = frappe.new_doc('Task')\ndoc.title = 'New Task 2'\ndoc.insert()\n")),(0,o.kt)("h2",{id:"frappedelete_doc-"},"frappe.delete_doc",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-delete-doc"}," ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe.delete_doc(doctype, name)\n")),(0,o.kt)("p",null,"Deletes the record and its children from the database. Also deletes other documents like Communication, Comments, etc linked to it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"frappe.delete_doc('Task', 'TASK00002')\n")),(0,o.kt)("h2",{id:"frapperename_doc-"},"frappe.rename_doc",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-rename-doc"}," ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe.rename_doc(doctype, old_name, new_name, merge=False)\n")),(0,o.kt)("p",null,"Rename a document's ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," (primary key) from ",(0,o.kt)("inlineCode",{parentName:"p"},"old_name")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"new_name"),". If ",(0,o.kt)("inlineCode",{parentName:"p"},"merge")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"True")," and a record with ",(0,o.kt)("inlineCode",{parentName:"p"},"new_name")," exists, will merge the record with it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"frappe.rename_doc('Task', 'TASK00002', 'TASK00003')\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Rename will only work if ",(0,o.kt)("strong",{parentName:"p"},"Allow Rename")," is set in the DocType Form.")),(0,o.kt)("h2",{id:"frappeget_meta-"},"frappe.get_meta",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#frappe-get-meta"}," ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"frappe.get_meta(doctype)\n")),(0,o.kt)("p",null,"Returns meta information of ",(0,o.kt)("inlineCode",{parentName:"p"},"doctype"),". This will also apply custom fields and property setters."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"meta = frappe.get_meta('Task')\nmeta.has_field('status') # True\nmeta.get_custom_fields() # [field1, field2, ..]\n")),(0,o.kt)("p",null,"To get the original document of DocType (without custom fields and property setters) use ",(0,o.kt)("inlineCode",{parentName:"p"},"frappe.get_doc('DocType', doctype_name)")),(0,o.kt)("h2",{id:"document-methods-"},"Document Methods",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#document-methods"}," ")),(0,o.kt)("p",null,"This section lists out common methods that are available on the ",(0,o.kt)("inlineCode",{parentName:"p"},"doc")," object."),(0,o.kt)("h2",{id:"docinsert-"},"doc.insert",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-insert"}," ")),(0,o.kt)("p",null,"This method inserts a new document into the database table. It will check for user permissions and execute ",(0,o.kt)("inlineCode",{parentName:"p"},"before_insert"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"validate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"on_update"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"after_insert")," methods if they are written in the controller."),(0,o.kt)("p",null,"It has some escape hatches that can be used to skip certain checks explained below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.insert(\n    ignore_permissions=True, # ignore write permissions during insert\n    ignore_links=True, # ignore Link validation in the document\n    ignore_if_duplicate=True, # dont insert if DuplicateEntryError is thrown\n    ignore_mandatory=True # insert even if mandatory fields are not set\n)\n")),(0,o.kt)("h2",{id:"docsave-"},"doc.save",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-save"}," ")),(0,o.kt)("p",null,"This method saves changes to an existing document. This will check for user permissions and execute ",(0,o.kt)("inlineCode",{parentName:"p"},"validate")," before updating and ",(0,o.kt)("inlineCode",{parentName:"p"},"on_update")," after updating values."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.save(\n    ignore_permissions=True, # ignore write permissions during insert\n    ignore_version=True # do not create a version record\n)\n")),(0,o.kt)("h2",{id:"docdelete-"},"doc.delete",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-delete"}," ")),(0,o.kt)("p",null,"Delete the document record from the database table. This method is an alias to ",(0,o.kt)("inlineCode",{parentName:"p"},"frappe.delete_doc"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.delete()\n")),(0,o.kt)("h2",{id:"docget_doc_before_save-"},"doc.get_doc_before_save",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-get-doc-before-save"}," ")),(0,o.kt)("p",null,"Will return a version of the doc before the changes were made. You can use it to compare what changed from the last version."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"old_doc = doc.get_doc_before_save()\nif old_doc.price != doc.price:\n    # price changed\n    pass\n")),(0,o.kt)("h2",{id:"docreload-"},"doc.reload",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-reload"}," ")),(0,o.kt)("p",null,"Will get the latest values from the database and update the doc state."),(0,o.kt)("p",null,"When you are working with a document, it may happen that some other part of code updates the value of some field directly in the database. In such cases you can use this method to reload the doc."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.reload()\n")),(0,o.kt)("h2",{id:"doccheck_permission-"},"doc.check_permission",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-check-permission"}," ")),(0,o.kt)("p",null,"Throw if the current user has no permission for the provided permtype."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.check_permission(permtype='write') # throws if no write permission\n")),(0,o.kt)("h2",{id:"docget_title-"},"doc.get_title",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-get-title"}," ")),(0,o.kt)("p",null,"Get the document title based on ",(0,o.kt)("inlineCode",{parentName:"p"},"title_field")," or field named ",(0,o.kt)("strong",{parentName:"p"},"title")," or ",(0,o.kt)("strong",{parentName:"p"},"name"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"title = doc.get_title()\n")),(0,o.kt)("h2",{id:"docnotify_update-"},"doc.notify_update",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-notify-update"}," ")),(0,o.kt)("p",null,"Publish realtime event to indicate that the document has been modified. Client side event handlers react to this event by updating the form."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.notify_update()\n")),(0,o.kt)("h2",{id:"docdb_set-"},"doc.db_set",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-db-set"}," ")),(0,o.kt)("p",null,"Set a field value of the document directly in the database and update the modified timestamp."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This method does not trigger controller validations and should be used very carefully.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"# updates value in database, updates the modified timestamp\ndoc.db_set('price', 2300)\n\n# updates value in database, will trigger doc.notify_update()\ndoc.db_set('price', 2300, notify=True)\n\n# updates value in database, will also run frappe.db.commit()\ndoc.db_set('price', 2300, commit=True)\n\n# updates value in database, does not update the modified timestamp\ndoc.db_set('price', 2300, update_modified=False)\n")),(0,o.kt)("h2",{id:"docappend-"},"doc.append",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-append"}," ")),(0,o.kt)("p",null,"Append a new item to a child table."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'doc.append("childtable", {\n    "child_table_field": "value",\n    "child_table_int_field": 0,\n    ...\n})\n')),(0,o.kt)("h2",{id:"docget_url-"},"doc.get_url",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-get-url"}," ")),(0,o.kt)("p",null,"Returns Desk URL for this document. For e.g: ",(0,o.kt)("inlineCode",{parentName:"p"},"/app/task/TASK00002")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"url = doc.get_url()\n")),(0,o.kt)("h2",{id:"docadd_comment-"},"doc.add_comment",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-add-comment"}," ")),(0,o.kt)("p",null,"Add a comment to this document. Will show up in timeline in Form view."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"# add a simple comment\ndoc.add_comment('Comment', text='Test Comment')\n\n# add a comment of type Edit\ndoc.add_comment('Edit', 'Values changed')\n\n# add a comment of type Shared\ndoc.add_comment(\"Shared\", \"{0} shared this document with everyone\".format(user))\n")),(0,o.kt)("h2",{id:"docadd_seen-"},"doc.add_seen",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-add-seen"}," ")),(0,o.kt)("p",null,"Add the given/current user to list of users who have seen this document. Will update the ",(0,o.kt)("inlineCode",{parentName:"p"},"_seen")," column in the table. It is stored as a JSON Array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"# add john to list of seen\ndoc.add_seen('john@doe.com')\n\n# add session user to list of seen\ndoc.add_seen()\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This works only if ",(0,o.kt)("strong",{parentName:"p"},"Track Seen")," is enabled in the DocType.")),(0,o.kt)("h2",{id:"docadd_viewed-"},"doc.add_viewed",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-add-viewed"}," ")),(0,o.kt)("p",null,"Add a view log when a user views a document i.e opens the Form."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"# add a view log by john\ndoc.add_viewed('john@doe.com')\n\n# add a view log by session user\ndoc.add_viewed()\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This works only if ",(0,o.kt)("strong",{parentName:"p"},"Track Views")," is enabled in the DocType.")),(0,o.kt)("h2",{id:"docadd_tag-"},"doc.add_tag",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-add-tag"}," ")),(0,o.kt)("p",null,"Add a tag to a document. Tags are generally used to filter and group documents."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"# add tags\ndoc.add_tag('developer')\ndoc.add_tag('frontend')\n")),(0,o.kt)("h2",{id:"docget_tags-"},"doc.get_tags",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-get-tags"}," ")),(0,o.kt)("p",null,"Returns a list of tags associated with the specific document."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"# get all tags\ndoc.get_tags()\n")),(0,o.kt)("h2",{id:"docrun_method-"},"doc.run_method",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-run-method"}," ")),(0,o.kt)("p",null,"Run method if defined in controller, will also trigger hooks if defined."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.run_method('validate')\n")),(0,o.kt)("h2",{id:"docqueue_action-"},"doc.queue_action",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-queue-action"}," ")),(0,o.kt)("p",null,"Run a controller method in background. If the method has an inner function, like ",(0,o.kt)("inlineCode",{parentName:"p"},"_submit")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"submit"),", it will call that method instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"doc.queue_action('send_emails', emails=email_list, message='Howdy')\n")),(0,o.kt)("h2",{id:"docget_children-"},"doc.get_children()",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-get-children-"}," ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Only available on tree DocTypes (inherited from ",(0,o.kt)("inlineCode",{parentName:"p"},"NestedSet"),").")),(0,o.kt)("p",null,"Returns a generator that yields an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"NestedSet")," for each child record."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"for child_doc in doc.get_children():\n    print(child_doc.name)\n")),(0,o.kt)("p",null,"It can also be applied recursively:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"for child_doc in doc.get_children():\n    print(child_doc.name)\n    for grandchild_doc in child_doc.get_children():\n        print(grandchild_doc.name)\n")),(0,o.kt)("h2",{id:"docget_parent-"},"doc.get_parent()",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-get-parent-"}," ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Only available on tree DocTypes (inherited from ",(0,o.kt)("inlineCode",{parentName:"p"},"NestedSet"),").")),(0,o.kt)("p",null,"Returns an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"NestedSet")," for the parent record."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"parent_doc = doc.get_parent()\ngrandparent_doc = parent_doc.get_parent()\n")),(0,o.kt)("h2",{id:"docdb_insert-"},"doc.db_insert()",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-db-insert-"}," ")),(0,o.kt)("p",null,"Serialize and insert a document into database. Warning: This bypasses all validations and controller methods that might be required to run before and after inserting. When in doubt use ",(0,o.kt)("inlineCode",{parentName:"p"},"doc.insert()")," instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'doc = frappe.get_doc(doctype="Controller", data="")\ndoc.db_insert()\n')),(0,o.kt)("h2",{id:"docdb_update-"},"doc.db_update()",(0,o.kt)("a",{parentName:"h2",href:"https://frappeframework.com/docs/user/en/api/document#doc-db-update-"}," ")),(0,o.kt)("p",null,"Serialize and update a document into database. Warning: This bypasses all validations and controller methods that might be required to run before and after updating. When in doubt use ",(0,o.kt)("inlineCode",{parentName:"p"},"doc.save()")," instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'doc = frappe.get_last_doc("User")\ndoc.last_active = now()\ndoc.db_update()\n')))}m.isMDXComponent=!0}}]);