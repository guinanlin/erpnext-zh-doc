<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://erpnext.cc/blog</id>
    <title>ERPNext中文文档 Blog</title>
    <updated>2023-10-11T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://erpnext.cc/blog"/>
    <subtitle>ERPNext中文文档 Blog</subtitle>
    <icon>https://erpnext.cc/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[erpnext如何与企业微信集成登录]]></title>
        <id>https://erpnext.cc/blog/erpnext如何与企业微信集成登录</id>
        <link href="https://erpnext.cc/blog/erpnext如何与企业微信集成登录"/>
        <updated>2023-10-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a href="#背景" class="hash-link" aria-label="Direct link to 背景" title="Direct link to 背景">​</a></h2><p>我相信很多人都跟我类似， 对于ERPNext是否能集成企业微信感兴趣。 </p><p>下面这个地址提供了一种实现的方式。 </p><p><a href="https://github.com/saoxia/erpnext_china/blob/develop/.github/doc/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E.md" target="_blank" rel="noopener noreferrer">https://github.com/saoxia/erpnext_china/blob/develop/.github/doc/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E.md</a></p><p>我也是基于如上的内容做了相关的定制和实现， 但是实现过程做了一些微调。 下面是具体实现的效果：</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="网页登录集成">网页登录集成：<a href="#网页登录集成" class="hash-link" aria-label="Direct link to 网页登录集成：" title="Direct link to 网页登录集成：">​</a></h2><p>ERPNext的用户的用户名 与 企业微信的后台 的账号 是一样的。 大小写不一样关系不大。</p><p><a href="https://pic.imgdb.cn/item/6525fbcbc458853aefe1c39f.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/6525fbcbc458853aefe1c39f.jpg" class="img_ev3q"></a></p><p>社交登录密钥的设定：</p><p><a href="https://pic.imgdb.cn/item/6525fd29c458853aefe4685b.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/6525fd29c458853aefe4685b.jpg" class="img_ev3q"></a></p><p>企业微信后台的设定：</p><p><a href="https://pic.imgdb.cn/item/6525fe3bc458853aefe69178.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/6525fe3bc458853aefe69178.jpg" class="img_ev3q"></a></p><p>登录效果：</p><p><a href="https://pic.imgdb.cn/item/6525fe7bc458853aefe709c0.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/6525fe7bc458853aefe709c0.jpg" class="img_ev3q"></a></p><p><a href="https://pic.imgdb.cn/item/6525ff0fc458853aefe831a1.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/6525ff0fc458853aefe831a1.jpg" class="img_ev3q"></a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="在企业微信内部直接打开erpnext">在企业微信内部直接打开ERPNext<a href="#在企业微信内部直接打开erpnext" class="hash-link" aria-label="Direct link to 在企业微信内部直接打开ERPNext" title="Direct link to 在企业微信内部直接打开ERPNext">​</a></h2><p>方法来自于群里头的restart的分享：
<a href="https://gitee.com/sonic3k/wxwork_en/" target="_blank" rel="noopener noreferrer">https://gitee.com/sonic3k/wxwork_en/</a></p><p>对企业微信后台做配置主页：
<a href="https://pic.imgdb.cn/item/6526099ec458853aef031d4f.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/6526099ec458853aef031d4f.jpg" class="img_ev3q"></a></p><p>具体的替换串为如下，其中xxx,yyy,zzz 替换成真实的数据
<a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=xxx&amp;redirect_uri=yyy&amp;response_type=code&amp;scope=snsapi_base&amp;state=STATE&amp;agentid=zzz#wechat_redirect" target="_blank" rel="noopener noreferrer">https://open.weixin.qq.com/connect/oauth2/authorize?appid=xxx&amp;redirect_uri=yyy&amp;response_type=code&amp;scope=snsapi_base&amp;state=STATE&amp;agentid=zzz#wechat_redirect</a></p><p>最后实现的效果：
在PC端的界面上， 可以直接打开网页， 而无须登录。
<a href="https://pic.imgdb.cn/item/65260a3fc458853aef04fdd6.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pic.imgdb.cn/item/65260a3fc458853aef04fdd6.jpg" class="img_ev3q"></a></p>]]></content>
        <author>
            <name>林贵南</name>
            <uri>https://erpnext.cc/</uri>
        </author>
        <category label="企业微信" term="企业微信"/>
        <category label="ERPNext" term="ERPNext"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[覆盖Doctype的方法]]></title>
        <id>https://erpnext.cc/blog/覆盖Doctype的方法</id>
        <link href="https://erpnext.cc/blog/覆盖Doctype的方法"/>
        <updated>2023-09-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[对于那些刚接触 ERPNext 的人来说，ERPNext 是由印度软件公司 Frappe Technologies Pvt.Ltd. 开发的一个 free and open-source 的集成企业资源规划Enterprise resource planning  (ERP)软件[2\][3\] . 它基于 MariaDB 数据库系统，使用基于  Python) 的服务器端框架[4\] (source: wikipedia)]]></summary>
        <content type="html"><![CDATA[<p>对于那些刚接触 ERPNext 的人来说，<a href="https://erpnext.com/" target="_blank" rel="noopener noreferrer"><strong>ERPNext</strong></a> 是由印度软件公司 Frappe Technologies Pvt.Ltd. 开发的一个 <a href="https://en.wikipedia.org/wiki/Free_and_open-source" target="_blank" rel="noopener noreferrer">free and open-source</a> 的集成企业资源规划<a href="https://en.wikipedia.org/wiki/Enterprise_resource_planning" target="_blank" rel="noopener noreferrer">Enterprise resource planning</a>  (ERP)软件[<a href="https://en.wikipedia.org/wiki/ERPNext#cite_note-2" target="_blank" rel="noopener noreferrer">2<!-- -->]</a>[<a href="https://en.wikipedia.org/wiki/ERPNext#cite_note-3" target="_blank" rel="noopener noreferrer">3<!-- -->]</a> . 它基于 <a href="https://en.wikipedia.org/wiki/MariaDB" target="_blank" rel="noopener noreferrer">MariaDB</a> 数据库系统，使用基于  <a href="https://en.wikipedia.org/wiki/Python_(programming_language)" target="_blank" rel="noopener noreferrer">Python</a> 的服务器端框架[<a href="https://en.wikipedia.org/wiki/ERPNext#cite_note-4" target="_blank" rel="noopener noreferrer">4<!-- -->]</a> (source: <a href="https://en.wikipedia.org/wiki/ERPNext" target="_blank" rel="noopener noreferrer">wikipedia</a>)</p><p>你可以在他们的网站上了解更多有关 ERPNext 的详情。在这篇文章中，我将试图让你了解Frappe已经提供给我们关于他们的 ERP 系统的定制。</p><p>首先，我想给出我的场景，为什么我的团队需要定制核心。</p><blockquote><p>在我工作的一个组织中，他们需要定制的工作流程来验证一个包含多个用户角色的用户，并且在这个角色中，并不是所有的用户都能以相同的批准价值来批准，即使他们被分配了相同的角色。相反，在同一个角色中，管理员可以设置他们希望允许批准的多个授权规则。</p></blockquote><p>在 ERPNext 中，有两种内置的方法可以实现这一点，即,</p><ol><li><p>Authorization Rule 授权规则</p><p>授权文档类型只允许组织设置授权销售的角色和用户。</p></li></ol><p><img loading="lazy" src="https://miro.medium.com/v2/resize:fit:700/1*egKJZn-OLgvRMrE98UPS2g.png" alt="img" class="img_ev3q"></p><ol start="2"><li>工作流程</li></ol><p>在工作流中，我们只能指定文档流在用户创建时的行为，直到销售批准为止。*</p><p><img loading="lazy" src="https://miro.medium.com/v2/resize:fit:700/1*ZVNSeQo3m8ksi62q0Zpo8g.png" alt="img" class="img_ev3q"></p><p>状态</p><p><img loading="lazy" src="https://miro.medium.com/v2/resize:fit:700/1*NsqjHmFO0PNc6F5ynO-bNQ.png" alt="img" class="img_ev3q"></p><p>规则</p><p><img loading="lazy" src="https://miro.medium.com/v2/resize:fit:700/1*NX6sdRtaWKUOpqUvUJX3XA.png" alt="img" class="img_ev3q"></p><p>规则细节。条件支持</p><p>对于许多组织来说，内置特性已经足够好了。但是，当涉及到解决某些企业组织的复杂问题时，它总是令我着迷。导致这些复杂性的原因之一，是我一直发现的管理政策的遗留问题。</p><p>我的委托人要求我的团队再做一次验证。系统应该能够满足包含角色的人员授权规则。在 ERPNext 中，我们有角色管理器，在每个角色中都包括许多人。让我为你简化一下。</p><ol><li>3个用户帐户用户的角色</li><li>用户在 A 部门工作</li><li>但并非所有具有帐户用户角色的用户都可以以相同的值进行授权。可能是授权值为10,000美元的2个用户和1个用户 $4,000。</li></ol><p>在上面的例子中，我们使用角色管理器进行了一些变通，它为不同的授权目的创建了许多不同的角色。这使得管理变得更加复杂。因此，在这种情况下，我们做另一种解决方案，仍然使用内置的，但添加另一层的授权，即“公司树”，它作为多级授权，只是为了解决组织问题。</p><p>看看我们怎么做。</p><p><img loading="lazy" src="https://miro.medium.com/v2/resize:fit:700/1*RZYJLm3q5ar8EVUH-JMNvg.png" alt="img" class="img_ev3q"></p><p>公司Doctype</p><p><img loading="lazy" src="https://miro.medium.com/v2/resize:fit:700/1*E4nlAV_HRJnwZ0ArSe4R1Q.png" alt="img" class="img_ev3q"></p><p>工作流程，文档类型，相关人员</p><p>现在让我们看看销售发票的主要文件。我们如何覆盖它并添加自定义验证。首先我们创建如下的文件目录</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">umserp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |_overrides</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        |_doctypes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              |_sales_invoice.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from __future__ import unicode_literals</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import frappe </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import erpnext</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from umserp.core.foundations.reporting import render_report</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from erpnext.accounts.doctype.sales_invoice.sales_invoice import SalesInvoice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe import _</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe.utils import add_days, cint, cstr, flt, formatdate, get_link_to_form, getdate, nowdate, now</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from umserp.core.utils.accounting import money_to_words_malay</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from umserp.umserp.doctype.module_mapper.module_mapper import validate_financial_period</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from umserp.umserp.doctype.company_tree.company_tree import validate_approving_tree_authority</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe.model.naming import make_autoname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from erpnext.accounts.utils import get_account_currency, get_fiscal_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe.model.workflow import get_workflow,get_transitions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe.query_builder import DocType</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe.workflow.doctype.workflow_action.workflow_action import get_doc_workflow_state</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from frappe.model.workflow import get_workflow_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># sales_invoice.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class UMSSalesInvoice(SalesInvoice):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    def _validate(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        super(UMSSalesInvoice,self).validate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self.convert_amount_into_words()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if self._action == "submit":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            self._validate_financial_period() # this is another custom validation for financial period</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            self._validate_approving_tree_authority() # this is the validation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if self._validate_posting_date():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                self.clear_payment_schedule()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                self.update_posting_date()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                self.set_payment_schedule()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                super(UMSSalesInvoice,self).set_missing_values()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>方法 <code>self._validate_approving_tree_authority()</code> 取自公司树 doctype。这个逻辑太长了，所以我不能在这个例子中包含它。</p><p>我们使这些代码适用于 ERPNext 的最后一部分是在 <code>hook.py</code> 中包含重写类。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">override_doctype_class = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Sales Invoice": "umserp.overrides.doctype.sales_invoice.UMSSalesInvoice",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在，系统会自动识别我们的代码作为首先要读取的主代码。</p><p>我在这里想说的是，ERPNext 是一个由 Frappe 框架授权的系统，可以很容易地定制，即使是一个公司可以拥有的复杂规则。当然，需求必须在一定程度上发生变化，但是如果一个框架具有这样的灵活性，那就太好了。</p><p>Happy reading. 阅读愉快。</p><p>备注:
感谢我伟大而热情的团队，使一切成为可能，而我永远不能做到没有他们。还要感谢 <a href="https://frappe.io/about" target="_blank" rel="noopener noreferrer"><em>Frappe Team</em></a> 制作了这样一个伟大的框架。</p>]]></content>
        <author>
            <name>Jurin Liyun</name>
            <uri>https://jurin.medium.com/</uri>
        </author>
        <category label="Doctype" term="Doctype"/>
        <category label="ERPNext" term="ERPNext"/>
    </entry>
</feed>